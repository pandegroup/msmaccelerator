#!/usr/bin/env python
# This file is part of MSMAccelerator.
#
# Copyright 2011 Stanford University
#
# MSMAccelerator is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

from argparse import ArgumentParser
import scipy.io
import sys, os
import matplotlib.pyplot as pp
import IPython as ip
#sys.path.append(os.path.join(os.path.split(os.path.abspath(__file__))[0], '..'))
from monakos import Project

parser = ArgumentParser('Monakos: Plot number of states vs. amount of data')
parser.add_argument('params_fn', help='Monakos Parameters File (yaml)')
args = parser.parse_args()

project = Project(args.params_fn)
num_states = []
num_data = []

for entry in project.builder_log:
    num_data.append(entry['total_num_frames'])
    ff = project.forcefields[-1]['name']
    tCounts = scipy.io.mmread(project.counts_fn(ff, entry['round_num']))
    num_states.append(tCounts.shape[0])

pp.plot(num_data, num_states, 'bx-')
pp.title('Number of MSM Microstates in Monakos Run')
pp.xlabel('Number of Simulation Frames')
pp.ylabel('Number of MSM microstates')
pp.show()
#ip.embed()
